<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rone.dao.RoleInfoMapper">
  <resultMap id="BaseResultMap" type="com.rone.entity.RoleInfo">
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="ROLE_DESC" jdbcType="VARCHAR" property="roleDesc" />
    <result column="DELETED" jdbcType="VARCHAR" property="deleted" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ROLE_NAME, ROLE_DESC, DELETED, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.rone.entity.RoleInfoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ADMIN_ROLE_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ADMIN_ROLE_INFO
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ADMIN_ROLE_INFO
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.rone.entity.RoleInfoCriteria">
    delete from ADMIN_ROLE_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rone.entity.RoleInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      select S_ROLE_ID.currval from dual
    </selectKey>
    insert into ADMIN_ROLE_INFO (ROLE_NAME, ROLE_DESC, DELETED, 
      CREATE_TIME, UPDATE_TIME)
    values (#{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, #{deleted,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.rone.entity.RoleInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      select S_ROLE_ID.currval from dual
    </selectKey>
    insert into ADMIN_ROLE_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        ROLE_NAME,
      </if>
      <if test="roleDesc != null">
        ROLE_DESC,
      </if>
      <if test="deleted != null">
        DELETED,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rone.entity.RoleInfoCriteria" resultType="java.lang.Integer">
    select count(*) from ADMIN_ROLE_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ADMIN_ROLE_INFO
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.roleName != null">
        ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleDesc != null">
        ROLE_DESC = #{record.roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        DELETED = #{record.deleted,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ADMIN_ROLE_INFO
    set ID = #{record.id,jdbcType=DECIMAL},
      ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      ROLE_DESC = #{record.roleDesc,jdbcType=VARCHAR},
      DELETED = #{record.deleted,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rone.entity.RoleInfo">
    update ADMIN_ROLE_INFO
    <set>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        DELETED = #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rone.entity.RoleInfo">
    update ADMIN_ROLE_INFO
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      DELETED = #{deleted,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=DECIMAL}
  </update>


  <insert id="insertRoleMenu">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      select S_ROLE_MENU_ID.currval from dual
    </selectKey>
    insert into ADMIN_ROLE_MENU (ROLE_ID, MENU_ID,CREATE_TIME)
    <foreach collection="menuIdList" item="menuId" index="index" separator="union all">
      select #{roleId},#{menuId},sysdate from dual
    </foreach>
  </insert>

  <select id="selectMenuIdListByRoleId" resultType="java.lang.Integer">
    select MENU_ID from ADMIN_ROLE_MENU where ROLE_ID = #{roleId}
  </select>

  <delete id="deleteRoleMenuByRoleId" parameterType="java.lang.Integer">
    delete from ADMIN_ROLE_MENU where ROLE_ID = #{roleId,jdbcType=DECIMAL}
  </delete>
</mapper>